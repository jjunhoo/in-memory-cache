<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.amorepacific.inmemorycache.mapper.CacheMapper">
    <!-- 특정 카테고리에 속한 상품 조회 -->
    <select id="selectProductListByCategory" resultType="com.amorepacific.inmemorycache.domain.CacheProduct">
        SELECT P.PRODUCT_NO AS productNo
             , P.PRODUCT_NAME AS productName
             , P.BRAND_NAME AS brandName
             , P.PRODUCT_PRICE AS productPrice
             , P.CATEGORY_NO AS categoryNo
             , (CASE WHEN C.PARENT_NO IS NOT NULL
                     THEN CONCAT((SELECT CATEGORY_NAME
                                    FROM CATEGORY
                                   WHERE CATEGORY_NO = C.PARENT_NO),
                                   '-',
                                   C.CATEGORY_NAME)
                     ELSE C.CATEGORY_NAME END) AS categoryName
          FROM CATEGORY AS C
    INNER JOIN PRODUCT AS P ON C.CATEGORY_NO = P.CATEGORY_NO
         WHERE C.CATEGORY_NO = #{categoryNo}
    </select>

    <!-- 카테고리에 속한 상품 리스트 조회 -->
    <select id="selectProductListForCategory" resultType="com.amorepacific.inmemorycache.domain.CacheProduct">
        SELECT P.PRODUCT_NO AS productNo
             , P.PRODUCT_NAME AS productName
             , P.BRAND_NAME AS brandName
             , P.PRODUCT_PRICE AS productPrice
             , P.CATEGORY_NO AS categoryNo
             , (CASE WHEN C.PARENT_NO IS NOT NULL
                     THEN CONCAT((SELECT CATEGORY_NAME
                                    FROM CATEGORY
                                   WHERE CATEGORY_NO = C.PARENT_NO),
                                   '-',
                                   C.CATEGORY_NAME)
                     ELSE C.CATEGORY_NAME END) AS categoryName
          FROM CATEGORY AS C
    INNER JOIN PRODUCT AS P ON C.CATEGORY_NO = P.CATEGORY_NO
    </select>

    <!-- 개별 상품 조회 -->
    <select id="selectProduct" parameterType="java.lang.Long" resultType="com.amorepacific.inmemorycache.domain.CacheProduct">
        SELECT P.PRODUCT_NO AS productNo
             , P.PRODUCT_NAME AS productName
             , P.BRAND_NAME AS brandName
             , P.PRODUCT_PRICE AS productPrice
             , P.CATEGORY_NO AS categoryNo
             , (CASE WHEN C.PARENT_NO IS NOT NULL
                     THEN CONCAT((SELECT CATEGORY_NAME
                                    FROM CATEGORY
                                   WHERE CATEGORY_NO = C.PARENT_NO),
                                   '-',
                                   C.CATEGORY_NAME)
                     ELSE C.CATEGORY_NAME END) AS categoryName
          FROM CATEGORY AS C
    INNER JOIN PRODUCT AS P ON C.CATEGORY_NO = P.CATEGORY_NO
         WHERE PRODUCT_NO = #{productNo}
    </select>

    <!-- 상품 리스트 조회 -->
    <select id="selectProductList" resultType="com.amorepacific.inmemorycache.domain.CacheProduct">
        SELECT P.PRODUCT_NO AS productNo
             , P.PRODUCT_NAME AS productName
             , P.BRAND_NAME AS brandName
             , P.PRODUCT_PRICE AS productPrice
             , P.CATEGORY_NO AS categoryNo
             , (CASE WHEN C.PARENT_NO IS NOT NULL
                     THEN CONCAT((SELECT CATEGORY_NAME
                                    FROM CATEGORY
                                   WHERE CATEGORY_NO = C.PARENT_NO),
                                   '-',
                                   C.CATEGORY_NAME)
                     ELSE C.CATEGORY_NAME END) AS categoryName
          FROM CATEGORY AS C
    INNER JOIN PRODUCT AS P ON C.CATEGORY_NO = P.CATEGORY_NO
    </select>

    <!-- 카테고리 리스트 조회 -->
    <select id="selectCategoryList" resultType="com.amorepacific.inmemorycache.domain.CacheCategory">
        SELECT C.CATEGORY_NO AS categoryNo
             , (CASE WHEN C.PARENT_NO IS NOT NULL
                     THEN CONCAT((SELECT CATEGORY_NAME
                                    FROM CATEGORY
                                   WHERE CATEGORY_NO = C.PARENT_NO),
                                   '-',
                                   C.CATEGORY_NAME)
                     ELSE C.CATEGORY_NAME END) AS categoryName
             , C.PARENT_NO AS parentNo
             , C.DEPTH AS depth
          FROM CATEGORY AS C
    </select>

    <!-- 카테고리명 수정 -->
    <update id="updateCategoryName">
        UPDATE CATEGORY
           SET CATEGORY_NAME = #{categoryName}
         WHERE CATEGORY_NO = #{categoryNo}
    </update>

    <!-- 상품명 수정 -->
    <update id="updateProductName">
        UPDATE PRODUCT
           SET PRODUCT_NAME = #{productName}
         WHERE PRODUCT_NO = #{productNo}
    </update>

    <!-- 상품 가격 수정 -->
    <update id="updateProductPrice">
        UPDATE PRODUCT
           SET PRODUCT_PRICE = #{productPrice}
         WHERE PRODUCT_NO = #{productNo}
    </update>
</mapper>